<div class="max-w-4xl mx-auto">
  <div class="mb-6">
    <a href="/sets/<%= set.id %>" class="text-blue-600 hover:underline">
      <i class="fas fa-arrow-left"></i> Back to Set
    </a>
  </div>

  <div class="bg-white p-8 rounded-lg shadow">
    <h1 class="text-3xl font-bold text-gray-800 mb-6">
      <i class="fas fa-file-import text-blue-600"></i> Import Flashcards
    </h1>

    <div class="mb-6 bg-blue-50 border-l-4 border-blue-500 p-4">
      <p class="text-sm text-gray-700 mb-2">
        <strong>Import Format:</strong> Each flashcard should be separated by the "Flashcard Separator". Within each flashcard, use "Term/Definition Separator" to separate the term and definition. Optionally, use "Note Separator" to add a personal note.
      </p>
      <div class="bg-white p-3 rounded mt-2">
        <p class="text-xs font-semibold text-gray-700 mb-1">Example with default separators:</p>
        <code class="text-xs block text-gray-800 whitespace-pre-wrap font-mono">Hello | Xin chào | Greeting phrase
===
Thank you | Cảm ơn | Polite expression
===
Goodbye | Tạm biệt</code>
      </div>
      <p class="text-xs text-gray-600 mt-2">
        <strong>Tip:</strong> You can type "tab" for tab character, "\t" for tab, or any custom text as separator.
      </p>
    </div>

    <form action="/sets/<%= set.id %>/import" method="POST">
      <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
        <div>
          <label for="termDefinitionSeparator" class="block text-gray-700 font-semibold mb-2">
            Term/Definition Separator <span class="text-red-500">*</span>
          </label>
          <input 
            type="text" 
            id="termDefinitionSeparator" 
            name="termDefinitionSeparator"
            value="|"
            class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500"
            required
            placeholder="e.g., |, tab, ;"
          >
          <p class="text-xs text-gray-500 mt-1">Separates term from definition</p>
        </div>

        <div>
          <label for="noteSeparator" class="block text-gray-700 font-semibold mb-2">
            Note Separator
          </label>
          <input 
            type="text" 
            id="noteSeparator" 
            name="noteSeparator"
            value="|"
            class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500"
            placeholder="e.g., |, ::, #"
          >
          <p class="text-xs text-gray-500 mt-1">Separates definition from note (optional)</p>
        </div>

        <div>
          <label for="flashcardSeparator" class="block text-gray-700 font-semibold mb-2">
            Flashcard Separator <span class="text-red-500">*</span>
          </label>
          <input 
            type="text" 
            id="flashcardSeparator" 
            name="flashcardSeparator"
            value="==="
            class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500"
            required
            placeholder="e.g., ===, ---, \n\n"
          >
          <p class="text-xs text-gray-500 mt-1">Separates each flashcard</p>
        </div>
      </div>

      <div class="mb-6">
        <div class="flex justify-between items-center mb-2">
          <label for="content" class="block text-gray-700 font-semibold">
            Flashcard Data <span class="text-red-500">*</span>
          </label>
          <button 
            type="button"
            onclick="generatePreview()"
            class="text-sm bg-blue-100 hover:bg-blue-200 text-blue-700 px-3 py-1 rounded transition"
          >
            <i class="fas fa-sync"></i> Preview Now
          </button>
        </div>
        <textarea 
          id="content" 
          name="content" 
          rows="12"
          class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500 font-mono text-sm"
          required
          placeholder="Paste your flashcard data here..."
        ></textarea>
        <p class="text-sm text-gray-500 mt-2">
          <i class="fas fa-info-circle"></i> Click "Preview Now" button to preview your flashcards before importing.
        </p>
      </div>

      <div class="mb-6">
        <div class="flex justify-between items-center mb-2">
          <label class="block text-gray-700 font-semibold">
            Preview
          </label>
          <span id="previewCount" class="text-sm text-gray-600">0 flashcards</span>
        </div>
        <div id="preview" class="border border-gray-300 rounded-lg p-4 bg-gray-50 min-h-[100px] max-h-[300px] overflow-y-auto">
          <p class="text-gray-400 text-sm">Preview will appear here...</p>
        </div>
      </div>

      <div class="flex space-x-4">
        <button 
          type="submit" 
          class="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition"
        >
          <i class="fas fa-file-import"></i> Import Flashcards
        </button>
        <a 
          href="/sets/<%= set.id %>" 
          class="bg-gray-200 text-gray-700 px-6 py-3 rounded-lg hover:bg-gray-300 transition"
        >
          <i class="fas fa-times"></i> Cancel
        </a>
      </div>
    </form>
  </div>
</div>

<script>
console.log('Import script loaded');

function getSeparators() {
  console.log('getSeparators called');
  const termDefSep = document.getElementById('termDefinitionSeparator').value;
  const noteSep = document.getElementById('noteSeparator').value;
  const flashcardSep = document.getElementById('flashcardSeparator').value;
  
  const result = {
    termDef: termDefSep === '\\t' || termDefSep.toLowerCase() === 'tab' ? '\t' : termDefSep,
    note: noteSep === '\\t' || noteSep.toLowerCase() === 'tab' ? '\t' : noteSep,
    flashcard: flashcardSep === '\\n\\n' ? '\n\n' : flashcardSep
  };
  
  console.log('Separators:', result);
  return result;
}

function generatePreview() {
  console.log('generatePreview called');
  
  const content = document.getElementById('content').value;
  const separators = getSeparators();
  const preview = document.getElementById('preview');
  const previewCount = document.getElementById('previewCount');
  
  console.log('Content length:', content.length);
  
  if (!content.trim()) {
    preview.innerHTML = '<p class="text-gray-400 text-sm">Preview will appear here...</p>';
    previewCount.textContent = '0 flashcards';
    return;
  }
  
  // Split by flashcard separator
  const flashcardBlocks = content.split(separators.flashcard).filter(block => block.trim());
  console.log('Flashcard blocks:', flashcardBlocks.length);
  
  const flashcards = [];
  
  flashcardBlocks.forEach((block, index) => {
    const parts = block.trim().split(separators.termDef);
    
    if (parts.length >= 2) {
      const term = parts[0].trim();
      let definition = '';
      let note = '';
      
      // Check if there's a note separator in the remaining parts
      const remaining = parts.slice(1).join(separators.termDef);
      
      if (separators.note && remaining.includes(separators.note)) {
        const defNoteParts = remaining.split(separators.note);
        definition = defNoteParts[0].trim();
        note = defNoteParts.slice(1).join(separators.note).trim();
      } else {
        definition = remaining.trim();
      }
      
      if (term && definition) {
        flashcards.push({ term, definition, note });
      }
    }
  });
  
  console.log('Parsed flashcards:', flashcards.length);
  
  if (flashcards.length === 0) {
    preview.innerHTML = '<p class="text-red-500 text-sm"><i class="fas fa-exclamation-triangle"></i> No valid flashcards found. Check your separator settings.</p>';
    previewCount.textContent = '0 flashcards';
    return;
  }
  
  let html = '<div class="space-y-3">';
  
  // Show first 10 flashcards instead of 5
  const displayCount = Math.min(flashcards.length, 10);
  
  for (let i = 0; i < displayCount; i++) {
    const card = flashcards[i];
    html += `
      <div class="bg-white p-4 rounded-lg border border-gray-200 shadow-sm">
        <div class="flex items-start mb-2">
          <span class="bg-blue-100 text-blue-800 text-xs font-semibold px-2 py-1 rounded mr-2">#${i + 1}</span>
        </div>
        <div class="text-sm mb-2">
          <span class="font-semibold text-gray-700">Term:</span>
          <div class="mt-1 text-gray-900 bg-gray-50 p-2 rounded">${escapeHtml(card.term)}</div>
        </div>
        <div class="text-sm mb-2">
          <span class="font-semibold text-gray-700">Definition:</span>
          <div class="mt-1 text-gray-900 bg-gray-50 p-2 rounded">${escapeHtml(card.definition)}</div>
        </div>
        ${card.note ? `
          <div class="text-sm">
            <span class="font-semibold text-gray-700">Note:</span>
            <div class="mt-1 text-gray-600 italic bg-yellow-50 p-2 rounded border-l-4 border-yellow-400">${escapeHtml(card.note)}</div>
          </div>
        ` : ''}
      </div>
    `;
  }
  
  if (flashcards.length > displayCount) {
    html += `
      <div class="text-center p-4 bg-gray-50 rounded border border-gray-200">
        <p class="text-sm text-gray-600 font-semibold">
          <i class="fas fa-ellipsis-h"></i> and ${flashcards.length - displayCount} more flashcard(s)
        </p>
      </div>
    `;
  }
  
  html += '</div>';
  preview.innerHTML = html;
  
  // Update count with color indicator
  const countColor = flashcards.length > 0 ? 'text-green-600' : 'text-gray-600';
  previewCount.innerHTML = `<span class="${countColor}"><i class="fas fa-check-circle"></i> ${flashcards.length} flashcard${flashcards.length !== 1 ? 's' : ''}</span>`;
  
  console.log('Preview generated successfully');
}

function escapeHtml(text) {
  const div = document.createElement('div');
  div.textContent = text;
  return div.innerHTML;
}

// Test on page load
document.addEventListener('DOMContentLoaded', function() {
  console.log('Page loaded, elements check:');
  console.log('- termDefinitionSeparator:', document.getElementById('termDefinitionSeparator') ? 'found' : 'NOT FOUND');
  console.log('- noteSeparator:', document.getElementById('noteSeparator') ? 'found' : 'NOT FOUND');
  console.log('- flashcardSeparator:', document.getElementById('flashcardSeparator') ? 'found' : 'NOT FOUND');
  console.log('- content:', document.getElementById('content') ? 'found' : 'NOT FOUND');
  console.log('- preview:', document.getElementById('preview') ? 'found' : 'NOT FOUND');
  console.log('- previewCount:', document.getElementById('previewCount') ? 'found' : 'NOT FOUND');
});
</script>
